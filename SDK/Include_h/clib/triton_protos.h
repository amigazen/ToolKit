#ifndef CLIB_TRITON_PROTOS_H
#define CLIB_TRITON_PROTOS_H

/*
** 'C' prototypes. For use with 32 bit integers only.
**
** Amiga specific files and diffs Copyright (C) 2025 amigazen project
** OpenTriton Copyright (C) 1993-1998 by OpenTriton Project
** Changes in 6.115 by amigazen project
** Refactoring for NDK3.2 by amigazen project
** This library is freely distributable under GPL terms
** This is the OpenTriton 2.0 release of the "triton.library" user
** interface creation and management tool kit.
**
** Generated by LibDescConverter from an sfd file
*/

#ifdef __cplusplus
extern "C" {
#endif /* __cplusplus */

#ifndef EXEC_TYPES_H
#include <exec/types.h>
#endif
#ifndef INTUITION_INTUITION_H
#include <intuition/intuition.h>
#endif
#ifndef INTUITION_INTUITIONBASE_H
#include <intuition/intuitionbase.h>
#endif
#ifndef GRAPHICS_GFX_H
#include <graphics/gfx.h>
#endif
#ifndef UTILITY_TAGITEM_H
#include <utility/tagitem.h>
#endif

/* "triton.library"*/
/*--- functions in V80 or higher ---*/
struct TR_Project *TR_OpenProject(struct TR_App *app, struct TagItem *taglist);
void TR_CloseProject(struct TR_Project *project);
LONG TR_FirstOccurance(UBYTE ch, STRPTR str);
LONG TR_NumOccurances(UBYTE ch, STRPTR str);
STRPTR TR_GetErrorString(UWORD num);
LONG TR_SetAttribute(struct TR_Project *project, ULONG ID, ULONG attribute, ULONG value);
ULONG TR_GetAttribute(struct TR_Project *project, ULONG ID, ULONG attribute);
void TR_LockProject(struct TR_Project *project);
void TR_UnlockProject(struct TR_Project *project);
/*--- functions in V81 or higher ---*/
ULONG TR_AutoRequest(struct TR_App *app, struct TR_Project *lockproject, struct TagItem *wintags);
ULONG TR_EasyRequest(struct TR_App *app, STRPTR bodyfmt, STRPTR gadfmt, struct TagItem *taglist);
struct TR_App *TR_CreateApp(struct TagItem *apptags);
void TR_DeleteApp(struct TR_App *app);
struct TR_Message *TR_GetMsg(struct TR_App *app);
void TR_ReplyMsg(struct TR_Message *message);
ULONG TR_Wait(struct TR_App *app, ULONG otherbits);
void TR_CloseWindowSafely(struct Window *window);
UWORD TR_GetLastError(struct TR_App *app);
struct Screen *TR_LockScreen(struct TR_Project *project);
void TR_UnlockScreen(struct Screen *screen);
struct Window *TR_ObtainWindow(struct TR_Project *project);
void TR_ReleaseWindow(struct Window *window);
ULONG TR_SendMessage(struct TR_Project *project, ULONG objectid, ULONG messageid, APTR messagedata);
BOOL TR_AddClass(struct TR_App *app, ULONG tag, ULONG supertag, TR_Method defaultmethod, ULONG datasize, struct TagItem *tags);
/*--- functions in V180 or higher ---*/
void TR_DrawFrame(struct TR_Project *project, struct RastPort *rp, UWORD left, UWORD top, UWORD width, UWORD height, UWORD type, BOOL inverted);
ULONG TR_FrameBorderWidth(struct TR_Project *project, UWORD type);
ULONG TR_FrameBorderHeight(struct TR_Project *project, UWORD type);
ULONG TR_TextWidth(struct TR_Project *project, STRPTR text, ULONG flags);
ULONG TR_TextHeight(struct TR_Project *project, STRPTR text, ULONG flags);
void TR_PrintText(struct TR_Project *project, struct RastPort *rp, STRPTR text, ULONG x, ULONG y, ULONG width, ULONG flags);
ULONG TR_GetPen(struct TR_Project *project, ULONG pentype, ULONG pendata);
ULONG TR_DoMethod(struct TROD_Object *object, ULONG messageid, APTR data);
ULONG TR_DoMethodClass(struct TROD_Object *object, ULONG messageid, APTR data, struct TR_Class *class);
void TR_AreaFill(struct TR_Project *project, struct RastPort *rp, ULONG left, ULONG top, ULONG right, ULONG bottom, ULONG type, void *dummy);
struct TR_Message *TR_CreateMsg(struct TR_App *app);

#ifdef __cplusplus
}
#endif /* __cplusplus */

#endif /* CLIB_TRITON_PROTOS_H */
